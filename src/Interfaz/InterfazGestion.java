/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Neodatis.Neodatis;
import Objetos.Equipo;
import Objetos.Jugador;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.neodatis.odb.Objects;

/**
 *
 * @author Guill
 */
public class InterfazGestion extends javax.swing.JFrame {

    Equipo e;
    Neodatis conexion;
    InterfazEquipos ie;

    /**
     * Creates new form InterfazGestion
     */
    public InterfazGestion(Equipo e, Neodatis conexion,InterfazEquipos ie) {
        this.e = e;
        this.conexion=conexion;
        this.ie=ie;
        initComponents();
        setTitle("Gestion " + e.getNombre());
        actualizarTabla();
        actualizarTablaTodos();
        setLocationRelativeTo(null);
        setVisible(true);
    }

    public void actualizarTabla() {
        DefaultTableModel modelo = null;
        String[] titulos = {"Id_jugador", "Nombre", "Edad", "Posicion", "Equipo"};
        modelo = new DefaultTableModel(null, titulos) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        Iterator<Jugador> it = e.getJugadores().iterator();
        for(int i=0;i<e.getJugadores().size();i++){
            Jugador j = it.next();
            String[] fila = new String[5];
            fila[0] = String.valueOf(j.getId_jugador());
            fila[1] = j.getNombre();
            fila[2] = String.valueOf(j.getEdad());
            fila[3] = j.getPosicion();
            fila[4] = j.getEquipo().getNombre();

            modelo.addRow(fila);
        }
        
        getTablaEquipo().setModel(modelo);

        for (int i = 0; i < 4; i++) {
            DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
            tcr.setHorizontalAlignment(SwingConstants.CENTER);
            getTablaEquipo().getColumnModel().getColumn(i).setCellRenderer(tcr);
        }
    }

    public void actualizarTablaTodos() {
        DefaultTableModel modelo = null;
        String[] titulos = {"Id_jugador", "Nombre", "Edad", "Posicion"};
        modelo = new DefaultTableModel(null, titulos) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        Objects<Jugador> jugadores = conexion.getBd().getObjects(Jugador.class);
        while (jugadores.hasNext()) {
            Jugador j = jugadores.next();
            if (j.getEquipo() == null) {
                String[] fila = new String[4];
                fila[0] = String.valueOf(j.getId_jugador());
                fila[1] = j.getNombre();
                fila[2] = String.valueOf(j.getEdad());
                fila[3] = j.getPosicion();

                modelo.addRow(fila);
            }
        }
        getTablaTodos().setModel(modelo);

        for (int i = 0; i < 4; i++) {
            DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
            tcr.setHorizontalAlignment(SwingConstants.CENTER);
            getTablaEquipo().getColumnModel().getColumn(i).setCellRenderer(tcr);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEquipo = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaTodos = new javax.swing.JTable();
        botonFichar = new javax.swing.JButton();
        botonDespedir = new javax.swing.JButton();

        setTitle("Fichar/Despedir jugadorer");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Todos los jugadores sin equipo del mercado:");

        tablaEquipo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaEquipo);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Jugadores pertenecientes al equipo:");

        tablaTodos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablaTodos);

        botonFichar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botonFichar.setForeground(new java.awt.Color(0, 0, 204));
        botonFichar.setText("Fichar jugador");
        botonFichar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonFicharActionPerformed(evt);
            }
        });

        botonDespedir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botonDespedir.setForeground(new java.awt.Color(255, 0, 0));
        botonDespedir.setText("Despedir jugador");
        botonDespedir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDespedirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(158, 158, 158)
                                .addComponent(botonFichar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(botonDespedir, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(20, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, Short.MAX_VALUE)
                .addComponent(botonFichar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonDespedir)
                .addGap(15, 15, 15))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(42, 42, 42)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(136, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonFicharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonFicharActionPerformed
        int row = getTablaTodos().getSelectedRow();
        if(row==-1){
            JOptionPane.showMessageDialog(this,"Selecciona que jugador quieres fichar","Error",JOptionPane.ERROR_MESSAGE);
        }else{
            Jugador j = conexion.devolverJugadorPorId(Integer.parseInt(getTablaTodos().getValueAt(row, 0).toString()));
            Jugador aux =j;
            aux.setEquipo(e);
            conexion.eliminarJugador(j);
            conexion.insertarJugador(aux);
            e.getJugadores().add(aux);
            conexion.getBd().store(e);
            conexion.getBd().commit();
            JOptionPane.showMessageDialog(this,"Jugador fichado al "+e.getNombre(),"Fichado",JOptionPane.INFORMATION_MESSAGE);
            actualizarTabla();
            actualizarTablaTodos();
            ie.actualizarTabla();
            ie.actualizarTabla1();
        }
    }//GEN-LAST:event_botonFicharActionPerformed

    private void botonDespedirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDespedirActionPerformed
        int row = getTablaEquipo().getSelectedRow();
        if(row==-1){
            JOptionPane.showMessageDialog(this,"Selecciona que jugador quieres despedir","Error",JOptionPane.ERROR_MESSAGE);
        }else{
            Jugador j = conexion.devolverJugadorPorId(Integer.parseInt(getTablaEquipo().getValueAt(row, 0).toString()));
            Jugador aux = j;
            aux.setEquipo(null);
            conexion.eliminarJugador(j);
            conexion.insertarJugador(aux);
            e.getJugadores().remove(j);
            conexion.getBd().store(e);
            conexion.getBd().commit();
            JOptionPane.showMessageDialog(this,"Jugador despedido del "+e.getNombre(),"Despedido",JOptionPane.INFORMATION_MESSAGE);
            actualizarTabla();
            actualizarTablaTodos();
            ie.actualizarTabla();
            ie.actualizarTabla1();
        }
    }//GEN-LAST:event_botonDespedirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonDespedir;
    private javax.swing.JButton botonFichar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaEquipo;
    private javax.swing.JTable tablaTodos;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the tablaEquipo
     */
    public javax.swing.JTable getTablaEquipo() {
        return tablaEquipo;
    }

    /**
     * @return the tablaTodos
     */
    public javax.swing.JTable getTablaTodos() {
        return tablaTodos;
    }
}
